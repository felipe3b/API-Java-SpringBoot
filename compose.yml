version: '3.8'

networks:
  guitar:
    name: guitar
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:
  mysql-data:

services:

  guitar: ## https://www.baeldung.com/ops/docker-jvm-heap-size , https://spring.io/guides/topicals/spring-boot-docker/
    depends_on:
      - db
    image: felipe3b/api-java-guitar:latest
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
    restart: always
    container_name: guitar
    environment:
      - JAVA_OPTS=${JAVA_OPTS}
      - LOGGING_LEVEL_ROOT=${LOGGING_LEVEL_ROOT}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
      - OTEL_RESOURCE_ATTRIBUTES=${OTEL_RESOURCE_ATTRIBUTES}
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    networks:
      - guitar
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    image: mysql:8.0
    container_name: db-guitar
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    networks:
      - guitar
    ports:
      - "3306:3306"
  
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus-guitar
    restart: unless-stopped
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/alert-rules.yml:/etc/prometheus/alert-rules.rules
      - prometheus-data:/prometheus
    networks:
      - guitar
    ports:
      - "9090:9090"

  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager-guitar
    volumes:
      - ./config/alert-manager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/data
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --log.level=debug
    depends_on:
      - prometheus
    ports:
      - "9093:9093"
    networks:
      - guitar

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-guitar
    restart: unless-stopped
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - guitar


  otel-collector:
     image: otel/opentelemetry-collector-contrib:0.72.0
     container_name: otel-collector
     command: "--config=/etc/otel-collector-config.yml"
     volumes: 
       - ./config/otel-collector-config.yml:/etc/otel-collector-config.yml
     ports:
       - "1888:1888"   # pprof extensions
       - "8888:8888"   # Prometheus metrics exposed by the collector
       - "8889:8889"   # Prometheus exporter metrics
       - "13133:13133" # health_check extension
       - "4317:4317"   # OTLP receiver
       - "4318:4318"   # OTLP receiver
       - "55670:55679" # zpages extension
       - "55681:55681" # http
     depends_on:
       - jaeger
     networks:
       - guitar

  jaeger:
     image: jaegertracing/all-in-one:latest
     container_name: jaeger
     ports:
       - "6831:6831/udp"
       - "16686:16686" # Porta da UI do Jaeger
       - "14250:14250" # Porta de recebimento de traces via HTTP
     networks:
       - guitar